# Default values for aces-ml.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: sami4rhimi/aces-ml
  tag: "1.0.20"
  pullPolicy: Always

service:
  type: ClusterIP
  port: 80
  targetPort: 8080
  protocol: TCP

# Monitoring configuration
serviceMonitor:
  enabled: true
  interval: 15s
  labels:
    release: prometheus

prometheusRule:
  enabled: true
  rules:
    - name: http-requests-per-second
      rules:
        - record: http_requests_per_second
          expr: rate(http_requests_total{endpoint!="/metrics",endpoint!="/health"}[1m])
    - name: ml-application-alerts
      rules:
        - alert: HighPredictionLatency
          expr: rate(prediction_duration_seconds_sum[5m]) / rate(prediction_duration_seconds_count[5m]) > 0.5
          for: 5m
          labels:
            severity: warning
          annotations:
            summary: High prediction latency detected
            description: ML model prediction latency is above 500ms over 5 minutes

        - alert: HighErrorRate
          expr: rate(prediction_errors_total[5m]) / rate(http_requests_total[5m]) > 0.05
          for: 5m
          labels:
            severity: critical
          annotations:
            summary: High prediction error rate
            description: Error rate is above 5% in the last 5 minutes

        - alert: ModelMemoryUsage
          expr: container_memory_usage_bytes{container="aces-ml"} > 2.5e9
          for: 5m
          labels:
            severity: warning
          annotations:
            summary: High memory usage
            description: Container memory usage is above 2.5GB

    - name: ml-metrics
      rules:
        - record: prediction_success_rate
          expr: rate(successful_predictions_total[5m]) / rate(http_requests_total[5m])

        - record: model_latency_percentile
          expr: histogram_quantile(0.95, rate(prediction_duration_seconds_bucket[5m]))

        - record: batch_processing_rate
          expr: rate(batch_processed_total[5m])

# Autoscaling configuration
autoscaling:
  enabled: true
  minReplicas: 1
  maxReplicas: 5
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 80
  targetRequestsPerSecond: 100

ingress:
  enabled: true
  path: /
  pathType: Prefix
  className: webapprouting.kubernetes.azure.com
  host: aces-ml.172.189.152.57.nip.io
  annotations:
    kubernetes.azure.com/static-ip: "true"
    kubernetes.azure.com/backend-protocol: "https"
    kubernetes.azure.com/ssl-redirect: "true"
    kubernetes.azure.com/enable-caching: "true"
    kubernetes.azure.com/caching: "true"
    kubernetes.azure.com/health-probe: "true"
    kubernetes.azure.com/health-probe-path: "/health"
    kubernetes.azure.com/health-probe-interval: "30"
    kubernetes.azure.com/health-probe-timeout: "30"
    kubernetes.azure.com/health-probe-healthy-threshold: "2"
    kubernetes.azure.com/health-probe-unhealthy-threshold: "5"
    kubernetes.azure.com/health-probe-protocol: "https"
    nginx.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    kubernetes.io/ingress.class: webapprouting.kubernetes.azure.com

resources:
  limits:
    cpu: 1500m
    memory: 3Gi
  requests:
    cpu: 750m
    memory: 1.5Gi

persistence:
  model:
    enabled: true
    size: 2Gi
    accessMode: ReadWriteOnce
  dataset:
    enabled: true
    size: 1Gi
    accessMode: ReadWriteOnce

temporaryStorage:
  sizeLimit: 512Mi

env:
  - name: ML_MODEL_PATH
    value: "/app/models/random_forest_model.joblib"
  - name: DATASET_PATH
    value: "/app/data/final_dataset.csv"
  - name: MIN_SAMPLES_FOR_TRAINING
    value: "1"
  - name: BATCH_SIZE
    value: "5"
  - name: BATCH_TIMEOUT
    value: "1.0"
  - name: API_TOKEN
    valueFrom:
      secretKeyRef:
        name: aces-ml-secret
        key: api-token
  - name: LOG_LEVEL
    value: "INFO"
  - name: FLASK_ENV
    value: "production"
  - name: FLASK_APP
    value: "ML.py"
  - name: PYTHONUNBUFFERED
    value: "1"

initContainers:
  - name: init-dirs
    image: busybox
    command: ['sh', '-c', 'mkdir -p /app/data /app/models && chmod -R 777 /app/data /app/models']
    volumeMounts:
      - name: dataset-volume
        mountPath: /app/data
      - name: model-volume
        mountPath: /app/models

podAnnotations:
  checksum/config: "${RANDOM}"



